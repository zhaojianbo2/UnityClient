// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: C2SLoginMsg.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Org.Game.Protobuf.C2S {

  /// <summary>Holder for reflection information generated from C2SLoginMsg.proto</summary>
  public static partial class C2SLoginMsgReflection {

    #region Descriptor
    /// <summary>File descriptor for C2SLoginMsg.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static C2SLoginMsgReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFDMlNMb2dpbk1zZy5wcm90bxIVb3JnLmdhbWUucHJvdG9idWYuYzJzInQK",
            "D0MyU0xvZ2luTWVzc2FnZRIQCghzZXJ2ZXJJZBgBIAEoBRIQCgh1c2VyTmFt",
            "ZRgCIAEoCRINCgVhZ2VudBgDIAEoBSIuCgVNc2dJRBIZChVFTlVOX1RZUEVf",
            "VU5TUEVDSUZJRUQQABIKCgZlTXNnSUQQZCI9CgtQaW5nTWVzc2FnZSIuCgVN",
            "c2dJRBIZChVFTlVOX1RZUEVfVU5TUEVDSUZJRUQQABIKCgZlTXNnSUQQZmIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Game.Protobuf.C2S.C2SLoginMessage), global::Org.Game.Protobuf.C2S.C2SLoginMessage.Parser, new[]{ "ServerId", "UserName", "Agent" }, null, new[]{ typeof(global::Org.Game.Protobuf.C2S.C2SLoginMessage.Types.MsgID) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Game.Protobuf.C2S.PingMessage), global::Org.Game.Protobuf.C2S.PingMessage.Parser, null, null, new[]{ typeof(global::Org.Game.Protobuf.C2S.PingMessage.Types.MsgID) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  登陆
  ///  code = 100
  /// </summary>
  public sealed partial class C2SLoginMessage : pb::IMessage<C2SLoginMessage> {
    private static readonly pb::MessageParser<C2SLoginMessage> _parser = new pb::MessageParser<C2SLoginMessage>(() => new C2SLoginMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SLoginMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Game.Protobuf.C2S.C2SLoginMsgReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SLoginMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SLoginMessage(C2SLoginMessage other) : this() {
      serverId_ = other.serverId_;
      userName_ = other.userName_;
      agent_ = other.agent_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SLoginMessage Clone() {
      return new C2SLoginMessage(this);
    }

    /// <summary>Field number for the "serverId" field.</summary>
    public const int ServerIdFieldNumber = 1;
    private int serverId_;
    /// <summary>
    ///  信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServerId {
      get { return serverId_; }
      set {
        serverId_ = value;
      }
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 2;
    private string userName_ = "";
    /// <summary>
    /// 账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "agent" field.</summary>
    public const int AgentFieldNumber = 3;
    private int agent_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Agent {
      get { return agent_; }
      set {
        agent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SLoginMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SLoginMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerId != other.ServerId) return false;
      if (UserName != other.UserName) return false;
      if (Agent != other.Agent) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerId != 0) hash ^= ServerId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (Agent != 0) hash ^= Agent.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ServerId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (Agent != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Agent);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (Agent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Agent);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SLoginMessage other) {
      if (other == null) {
        return;
      }
      if (other.ServerId != 0) {
        ServerId = other.ServerId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.Agent != 0) {
        Agent = other.Agent;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ServerId = input.ReadInt32();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 24: {
            Agent = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the C2SLoginMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum MsgID {
        [pbr::OriginalName("ENUN_TYPE_UNSPECIFIED")] EnunTypeUnspecified = 0,
        [pbr::OriginalName("eMsgID")] EMsgId = 100,
      }

    }
    #endregion

  }

  /// <summary>
  ///  心跳
  ///  code = 102
  /// </summary>
  public sealed partial class PingMessage : pb::IMessage<PingMessage> {
    private static readonly pb::MessageParser<PingMessage> _parser = new pb::MessageParser<PingMessage>(() => new PingMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PingMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Game.Protobuf.C2S.C2SLoginMsgReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingMessage(PingMessage other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingMessage Clone() {
      return new PingMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PingMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PingMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PingMessage other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PingMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum MsgID {
        [pbr::OriginalName("ENUN_TYPE_UNSPECIFIED")] EnunTypeUnspecified = 0,
        [pbr::OriginalName("eMsgID")] EMsgId = 102,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
